{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedBlobText",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Json1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SonsioDealerNumber as string,",
				"          ContractNumber as string,",
				"          ContractStatus as string,",
				"          CancellationEffectiveDate as string,",
				"          RefundAmount as string,",
				"          TransferFee as string,",
				"          ProgramDescription as string,",
				"          ProgramID as string,",
				"          CustomerFirstName as string,",
				"          CustomerLastName as string,",
				"          CustomerStreetAddress1 as string,",
				"          CustomerStreetAddress2 as string,",
				"          CustomerCity as string,",
				"          CustomerState as string,",
				"          CustomerZip as string,",
				"          CustomerHomePhone as string,",
				"          CustomerEmailAddress as string,",
				"          VehicleYear as string,",
				"          VehicleMake as string,",
				"          VehicleModel as string,",
				"          VehicleVIN as string,",
				"          ContractSaleDate as string,",
				"          ContractTermMonths as string,",
				"          RetailRate as string,",
				"          TotalPaymentToSonsio as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 derive(SonsioDealerNumber = iif(SonsioDealerNumber==\"DEALERCREDIT01\", \"B1001001\", SonsioDealerNumber),",
				"          ProgramID = iif(ProgramID==\"1954\", \"B-SF-DENT-8121-79\", ProgramID)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          coverages as (planCode as string, retailCost as double, term as (termOdometer as integer, termMonths as integer))[],",
				"          dealerNumber as string,",
				"          contractNumber as string,",
				"          saleDate as string,",
				"          saleOdometer as integer,",
				"          startingOdometer as integer,",
				"          endingOdometer as integer,",
				"          vehicle as (vin as string, vehicleAgeType as string),",
				"          customer as (dateOfBirth as string, culture as string, firstName as string, lastName as string, phone as string, email as string, address as (countryCode as string, address1 as string, city as string, state as string, postalCode as string)),",
				"          culture as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          dealerNumber = SonsioDealerNumber,",
				"          ContractStatus,",
				"          CancellationEffectiveDate,",
				"          RefundAmount,",
				"          TransferFee,",
				"          ProgramDescription,",
				"          coverageCode = ProgramID,",
				"          CustomerFirstName,",
				"          CustomerLastName,",
				"          CustomerStreetAddress1,",
				"          CustomerStreetAddress2,",
				"          CustomerCity,",
				"          CustomerState,",
				"          CustomerZip,",
				"          CustomerHomePhone,",
				"          CustomerEmailAddress,",
				"          VehicleYear,",
				"          VehicleMake,",
				"          VehicleModel,",
				"          VehicleVIN,",
				"          ContractSaleDate,",
				"          ContractTermMonths,",
				"          RetailRate,",
				"          TotalPaymentToSonsio",
				"     )) ~> sink1"
			]
		}
	}
}